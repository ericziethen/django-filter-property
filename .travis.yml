language: python

cache: pip

# TODO
# Create athe Same Travis with Build Stages, so only deploy if build ok on all jobs
# https://docs.travis-ci.com/user/build-stages/

# Limit under which Conditions we run Travis
branches:
  only:
  - master      # Build if the branch is the master branch

matrix:
  include:
  - name: "Linux, Python 3.6 - Sqlite"
    os: linux
    dist: xenial
    python: "3.6"
    env: DJANGO_DB=SQLITE
  - name: "Linux, Python 3.6 - Postgres"
    os: linux
    dist: xenial
    python: "3.6"
    env: DJANGO_DB=POSTGRES
  - name: "Linux, Python 3.7 - Sqlite"
    os: linux
    dist: xenial
    python: "3.7"
    env: DJANGO_DB=SQLITE
  - name: "Linux, Python 3.7 - Postgres"
    os: linux
    dist: xenial
    python: "3.7"
    env: DJANGO_DB=POSTGRES
  - name: "Linux, Python 3.8 - Sqlite"
    os: linux
    dist: xenial
    python: "3.8"
    env: DJANGO_DB=SQLITE
  - name: "Linux, Python 3.8 - Postgres"
    os: linux
    dist: xenial
    python: "3.8"
    env: DJANGO_DB=POSTGRES

services:
- postgresql

install:
- pip --version

- python --version --version
- pip list

- python -m pip install --upgrade pip pipenv setuptools wheel numpy
- pip list

# don't use the '--upgrade' to not upgrade pinned requirements with generic ones
- pip install -r requirements.txt
- pip list

# Print Environment Variables
- if [ "$TRAVIS_OS_NAME" = "windows" ]; then set; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then printenv; fi

before_script:
- if [ "$DJANGO_DB" = "POSTGRES" ]; then psql -c 'create database travis_ci_test;' -U postgres; fi

script:

# Check Django
- if [ "$TRAVIS_OS_NAME" = "windows" ]; then dev/check_django.bat; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./dev/check_django.sh; fi

# Run Tests
- if [ "$TRAVIS_OS_NAME" = "windows" ]; then
    if [ "$DJANGO_DB" = "POSTGRES" ]; then
      dev/run_tests.bat postgres-travis;
    else
      dev/run_tests.bat;
    fi
  fi

- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    if [ "$DJANGO_DB" = "POSTGRES" ]; then
      ./dev/run_tests.sh postgres-travis;
    else
      ./dev/run_tests.sh;
    fi
  fi


# Run Linting
- if [ "$TRAVIS_OS_NAME" = "windows" ]; then dev/run_linters.bat; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./dev/run_linters.sh; fi

# Run Package Safety Checks
- if [ "$TRAVIS_OS_NAME" = "windows" ]; then dev/check_package_safety_bare.bat; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./dev/check_package_safety.sh; fi

after_success:
- codecov
